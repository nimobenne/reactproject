{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nimo Benne\\\\Documents\\\\GitHub\\\\reactproject\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Todolist from \"./Todolist\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport './App.css';\nimport { v4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LOCALSTORAGEKEY = 'todoApp.todo';\n\nfunction App() {\n  _s();\n\n  const [todo, setTodos] = useState([]);\n  const todoNameRef = useRef();\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCALSTORAGEKEY));\n    if (storedTodos) setTodos(storedTodos);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(LOCALSTORAGEKEY, JSON.stringify(todo));\n  }, [todo]);\n\n  function toggleTodo(id) {\n    const newTodos = [...todo];\n    const todos = newTodos.find(todo => todo.id === id);\n    todos.complete = !todos.complete;\n    setTodos(newTodos);\n  }\n\n  function addTodo(e) {\n    const name = todoNameRef.current.value;\n    if (name === '') return;\n    setTodos(prevTodo => {\n      return [...prevTodo, {\n        id: v4(),\n        name: name,\n        complete: false\n      }];\n    });\n    todoNameRef.current.value = null;\n  }\n\n  function clearTodo() {\n    const newTodos = todo.filter(todo => !todo.complete);\n    setTodos(newTodos);\n  }\n\n  function keyPress(e) {\n    if (e.keyCode === 13) return;\n    addTodo();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Todolist, {\n      todo: todo,\n      toggleTodo: toggleTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: todoNameRef,\n      type: \"text\",\n      onKeyPress: keyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTodo,\n      children: \" Add To Do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearTodo,\n      children: \" Clear Completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [todo.filter(todo => !todo.complete).length, \" left to do\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"N0WxC7E12Z0LcVzkFNFEWfuaNZE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Nimo Benne/Documents/GitHub/reactproject/src/App.js"],"names":["Todolist","React","useState","useRef","useEffect","v4","LOCALSTORAGEKEY","App","todo","setTodos","todoNameRef","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","toggleTodo","id","newTodos","todos","find","complete","addTodo","e","name","current","value","prevTodo","clearTodo","filter","keyPress","keyCode","length"],"mappings":"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","sourcesContent":["import Todolist from \"./Todolist\";\nimport React, {useState, useRef, useEffect} from \"react\";\nimport './App.css';\n\nimport {v4} from \"uuid\";\n\nconst LOCALSTORAGEKEY = 'todoApp.todo'\n\nfunction App() {\n    const [todo, setTodos] = useState([])\n    const todoNameRef = useRef()\n\n    useEffect(() => {\n        const storedTodos = JSON.parse(localStorage.getItem(LOCALSTORAGEKEY))\n        if (storedTodos) setTodos(storedTodos)\n    }, [])\n\n    useEffect(() => {\n        localStorage.setItem(LOCALSTORAGEKEY, JSON.stringify(todo))\n    }, [todo])\n\n    function toggleTodo(id) {\n        const newTodos = [...todo]\n        const todos = newTodos.find(todo => todo.id === id)\n        todos.complete = !todos.complete\n        setTodos((newTodos))\n    }\n\n    function addTodo(e) {\n        const name = todoNameRef.current.value\n        if (name === '') return\n        setTodos(prevTodo => {\n            return [...prevTodo, {id: v4(), name: name, complete: false}]\n        })\n        todoNameRef.current.value = null\n    }\n\n    function clearTodo() {\n        const newTodos = todo.filter(todo => !todo.complete)\n        setTodos(newTodos)\n    }\n\n    function keyPress(e) {\n        if (e.keyCode === 13) return\n            addTodo()\n    }\n\n\n    return (\n        <>\n        <Todolist todo={todo} toggleTodo={toggleTodo}/ >\n            <input ref={todoNameRef} type=\"text\" onKeyPress={keyPress}/>\n            <button onClick={addTodo}> Add To Do</button>\n            <button onClick={clearTodo}> Clear Completed</button>\n            <div>{todo.filter(todo => !todo.complete).length} left to do</div>\n        </>\n        )\n\n        }\n\n        export default App;"]},"metadata":{},"sourceType":"module"}