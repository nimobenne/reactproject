{"ast":null,"code":"import _toConsumableArray from\"C:/Users/Nimo Benne/Documents/GitHub/reactproject/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/Nimo Benne/Documents/GitHub/reactproject/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import Todolist from\"./Todolist\";import React,{useState,useRef,useEffect}from\"react\";import{v4}from\"uuid\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var LOCALSTORAGEKEY='todoApp.todo';function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),todo=_useState2[0],setTodos=_useState2[1];var todoNameRef=useRef();useEffect(function(){var storedTodos=JSON.parse(localStorage.getItem(LOCALSTORAGEKEY));if(storedTodos)setTodos(storedTodos);},[]);useEffect(function(){localStorage.setItem(LOCALSTORAGEKEY,JSON.stringify(todo));},[todo]);function toggleTodo(id){var newTodos=_toConsumableArray(todo);var todos=newTodos.find(function(todo){return todo.id===id;});todos.complete=!todos.complete;setTodos(newTodos);}function addTodo(e){var name=todoNameRef.current.value;if(name==='')return;setTodos(function(prevTodo){return[].concat(_toConsumableArray(prevTodo),[{id:v4(),name:name,complete:false}]);});todoNameRef.current.value=null;}function clearTodo(){var newTodos=todo.filter(function(todo){return!todo.complete;});setTodos(newTodos);}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Todolist,{todo:todo,toggleTodo:toggleTodo}),/*#__PURE__*/_jsx(\"input\",{ref:todoNameRef,type:\"text\"}),/*#__PURE__*/_jsx(\"button\",{onClick:addTodo,children:\" Add Todo\"}),/*#__PURE__*/_jsx(\"button\",{onClick:clearTodo,children:\" Clear Completed\"}),/*#__PURE__*/_jsxs(\"div\",{children:[todo.filter(function(todo){return!todo.complete;}).length,\" left to do\"]})]});}export default App;","map":{"version":3,"sources":["C:/Users/Nimo Benne/Documents/GitHub/reactproject/src/App.js"],"names":["Todolist","React","useState","useRef","useEffect","v4","LOCALSTORAGEKEY","App","todo","setTodos","todoNameRef","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","toggleTodo","id","newTodos","todos","find","complete","addTodo","e","name","current","value","prevTodo","clearTodo","filter","length"],"mappings":"sRAAA,MAAOA,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,MAAzB,CAAiCC,SAAjC,KAAiD,OAAjD,CAEA,OAAQC,EAAR,KAAiB,MAAjB,C,6IAEA,GAAMC,CAAAA,eAAe,CAAG,cAAxB,CAEA,QAASC,CAAAA,GAAT,EAAe,CACX,cAAyBL,QAAQ,CAAC,EAAD,CAAjC,wCAAOM,IAAP,eAAaC,QAAb,eACA,GAAMC,CAAAA,WAAW,CAAGP,MAAM,EAA1B,CAEAC,SAAS,CAAC,UAAM,CACZ,GAAMO,CAAAA,WAAW,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBT,eAArB,CAAX,CAApB,CACA,GAAIK,WAAJ,CAAiBF,QAAQ,CAACE,WAAD,CAAR,CACpB,CAHQ,CAGN,EAHM,CAAT,CAKAP,SAAS,CAAC,UAAM,CACZU,YAAY,CAACE,OAAb,CAAqBV,eAArB,CAAsCM,IAAI,CAACK,SAAL,CAAeT,IAAf,CAAtC,EACH,CAFQ,CAEN,CAACA,IAAD,CAFM,CAAT,CAIA,QAASU,CAAAA,UAAT,CAAoBC,EAApB,CAAwB,CACpB,GAAMC,CAAAA,QAAQ,oBAAOZ,IAAP,CAAd,CACA,GAAMa,CAAAA,KAAK,CAAGD,QAAQ,CAACE,IAAT,CAAc,SAAAd,IAAI,QAAIA,CAAAA,IAAI,CAACW,EAAL,GAAYA,EAAhB,EAAlB,CAAd,CACAE,KAAK,CAACE,QAAN,CAAiB,CAACF,KAAK,CAACE,QAAxB,CACAd,QAAQ,CAAEW,QAAF,CAAR,CACH,CAED,QAASI,CAAAA,OAAT,CAAiBC,CAAjB,CAAoB,CAChB,GAAMC,CAAAA,IAAI,CAAGhB,WAAW,CAACiB,OAAZ,CAAoBC,KAAjC,CACA,GAAIF,IAAI,GAAK,EAAb,CAAiB,OACjBjB,QAAQ,CAAC,SAAAoB,QAAQ,CAAI,CACjB,mCAAWA,QAAX,GAAqB,CAACV,EAAE,CAAEd,EAAE,EAAP,CAAWqB,IAAI,CAAEA,IAAjB,CAAuBH,QAAQ,CAAE,KAAjC,CAArB,GACH,CAFO,CAAR,CAGAb,WAAW,CAACiB,OAAZ,CAAoBC,KAApB,CAA4B,IAA5B,CACH,CAED,QAASE,CAAAA,SAAT,EAAqB,CACjB,GAAMV,CAAAA,QAAQ,CAAGZ,IAAI,CAACuB,MAAL,CAAY,SAAAvB,IAAI,QAAI,CAACA,IAAI,CAACe,QAAV,EAAhB,CAAjB,CACAd,QAAQ,CAACW,QAAD,CAAR,CACH,CAGD,mBAAQ,wCACJ,KAAC,QAAD,EAAU,IAAI,CAAEZ,IAAhB,CAAsB,UAAU,CAAEU,UAAlC,EADI,cAEA,cAAO,GAAG,CAAER,WAAZ,CAAyB,IAAI,CAAC,MAA9B,EAFA,cAGA,eAAQ,OAAO,CAAEc,OAAjB,uBAHA,cAIA,eAAQ,OAAO,CAAEM,SAAjB,8BAJA,cAKA,uBAAMtB,IAAI,CAACuB,MAAL,CAAY,SAAAvB,IAAI,QAAI,CAACA,IAAI,CAACe,QAAV,EAAhB,EAAoCS,MAA1C,iBALA,GAAR,CASK,CAED,cAAezB,CAAAA,GAAf","sourcesContent":["import Todolist from \"./Todolist\";\nimport React, {useState, useRef, useEffect} from \"react\";\n\nimport {v4} from \"uuid\";\n\nconst LOCALSTORAGEKEY = 'todoApp.todo'\n\nfunction App() {\n    const [todo, setTodos] = useState([])\n    const todoNameRef = useRef()\n\n    useEffect(() => {\n        const storedTodos = JSON.parse(localStorage.getItem(LOCALSTORAGEKEY))\n        if (storedTodos) setTodos(storedTodos)\n    }, [])\n\n    useEffect(() => {\n        localStorage.setItem(LOCALSTORAGEKEY, JSON.stringify(todo))\n    }, [todo])\n\n    function toggleTodo(id) {\n        const newTodos = [...todo]\n        const todos = newTodos.find(todo => todo.id === id)\n        todos.complete = !todos.complete\n        setTodos((newTodos))\n    }\n\n    function addTodo(e) {\n        const name = todoNameRef.current.value\n        if (name === '') return\n        setTodos(prevTodo => {\n            return [...prevTodo, {id: v4(), name: name, complete: false}]\n        })\n        todoNameRef.current.value = null\n    }\n\n    function clearTodo() {\n        const newTodos = todo.filter(todo => !todo.complete)\n        setTodos(newTodos)\n    }\n\n\n    return (<>\n        <Todolist todo={todo} toggleTodo={toggleTodo}/ >\n            <input ref={todoNameRef} type=\"text\"/>\n            <button onClick={addTodo}> Add Todo</button>\n            <button onClick={clearTodo}> Clear Completed</button>\n            <div>{todo.filter(todo => !todo.complete).length} left to do</div>\n        </>\n        )\n\n        }\n\n        export default App;"]},"metadata":{},"sourceType":"module"}